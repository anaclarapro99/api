import streamlit as st
import pandas as pd
import requests

st.set_page_config(page_title="Cota√ß√£o de Moedas - BrasilAPI", layout="wide")

st.title("üí± Cota√ß√£o de Moedas - Dados via BrasilAPI")

st.markdown("""
Esta aplica√ß√£o consome dados da [BrasilAPI](https://brasilapi.com.br) para exibir as **cota√ß√µes de moedas estrangeiras** em rela√ß√£o ao **Real (R$)**.

### Informa√ß√µes exibidas:
- Nome da moeda
- C√≥digo da moeda
- Valor atual em R$
- Fonte dos dados
""")

# Endpoint correto da API
url = "https://brasilapi.com.br/api/currency/v1"

try:
    resposta = requests.get(url)
    resposta.raise_for_status()  # Gera exce√ß√£o se houver erro

    dados = resposta.json()

    if isinstance(dados, list) and len(dados) > 0:
        df = pd.DataFrame(dados)

        # Verifica se as colunas necess√°rias est√£o presentes
        if all(col in df.columns for col in ["name", "code", "value", "source"]):
            df = df[["name", "code", "value", "source"]]
            df.columns = ["Nome da Moeda", "C√≥digo", "Valor Atual (R$)", "Fonte"]

            # Formata√ß√£o do valor
            df["Valor Atual (R$)"] = df["Valor Atual (R$)"].apply(lambda x: f"R$ {x:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."))

            st.markdown("### üìä Tabela de Cota√ß√µes")
            st.dataframe(df, use_container_width=True)
        else:
            st.warning("A resposta da API n√£o cont√©m os dados esperados.")
    else:
        st.warning("Nenhum dado encontrado na resposta da API.")


